{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\SiteNftMint\\\\appnfts\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartcontratAdress = '0x6C0F01619fE0303419cB6158Cc3639418E4DDaF0';\nasync function setCost(newCost) {\n  if (typeof window.ethereum !== 'undefined') {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      const overrides = {\n        from: accounts[0],\n        gasLimit: 2900000\n      };\n      const transaction = await contract.setCost(ethers.utils.parseEther(newCost), overrides);\n      await transaction.wait();\n      fetchData();\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n}\nfunction NFTCard(_ref) {\n  let {\n    nft,\n    mintFunction,\n    setPriceFunction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nftImage\",\n      src: nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"),\n      alt: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintFunction(nft.edition),\n      children: [\"Mint NFT \", nft.edition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        setCost(e.target.cost.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        name: \"cost\",\n        placeholder: \"New cost\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 7\n  }, this);\n}\n_c = NFTCard;\nfunction App() {\n  _s();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {\n          cost: String(cost),\n          totalSupply: String(totalSupply)\n        };\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vÃ©rification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"withdraw\",\n      onClick: withdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery\",\n        children: nftData.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n          nft: nft,\n          mintFunction: mint,\n          setPriceFunction: setNftPrice\n        }, nft.edition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint a Jox NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [data.totalSupply, \"/\", data.maxSupply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cost\",\n        children: [\"Jox Collection NFT cost \", Number(data.cost) / 10 ** 18, \" ETH (excluding gas fees)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"2BGA2Z5gzNji+rNAX3sMIQu9KMI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NFTCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","SmartContrat","dataNft","jsxDEV","_jsxDEV","smartcontratAdress","setCost","newCost","window","ethereum","accounts","request","method","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","overrides","from","gasLimit","transaction","utils","parseEther","wait","fetchData","err","setError","message","NFTCard","_ref","nft","mintFunction","setPriceFunction","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","replace","alt","onClick","edition","onSubmit","e","preventDefault","target","cost","value","type","step","placeholder","required","_c","App","_s","error","data","setData","account","setAccount","nftData","setNftData","getAccounts","console","log","totalSupply","object","String","mint","Number","setNftPrice","nftId","price","contractOwner","owner","toLowerCase","Error","withdraw","map","maxSupply","_c2","$RefreshReg$"],"sources":["C:/Users/pierr/Documents/SiteNftMint/appnfts/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\n\nconst smartcontratAdress = '0x6C0F01619fE0303419cB6158Cc3639418E4DDaF0';\n\nasync function setCost(newCost) {\n  if (typeof window.ethereum !== 'undefined') {\n    try {\n      const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      const overrides = {\n        from: accounts[0],\n        gasLimit: 2900000,\n      };\n      const transaction = await contract.setCost(ethers.utils.parseEther(newCost), overrides);\n      await transaction.wait();\n      fetchData();\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n}\nfunction NFTCard({ nft, mintFunction, setPriceFunction }) {\n  return (\n      <div className=\"nft-card\">\n        <h2>{nft.name}</h2>\n        <img\n            className=\"nftImage\"\n            src={nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\n            alt={nft.name}\n        />\n        <button onClick={() => mintFunction(nft.edition)}>\n          Mint NFT {nft.edition}\n        </button>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          setCost(e.target.cost.value);\n        }}>\n          <input type=\"number\" step=\"0.01\" name=\"cost\" placeholder=\"New cost\" required />\n          <button type=\"submit\">Set cost</button>\n        </form>\n      </div>\n  );\n}\n\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {cost: String(cost), totalSupply: String(totalSupply)};\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000,\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vÃ©rification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  return (\n      <div className=\"App\">\n        {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n            <button className=\"withdraw\" onClick={withdraw}>\n              Withdraw\n            </button>\n        )}\n        <div className=\"container\">\n          <div className=\"nft-gallery\">\n            {nftData.map((nft) => (\n                <NFTCard key={nft.edition} nft={nft} mintFunction={mint} setPriceFunction={setNftPrice}/>\n\n            ))}\n          </div>\n          {error && <p>{error}</p>}\n          <h1>Mint a Jox NFT</h1>\n          <p className=\"count\">\n            {data.totalSupply}/{data.maxSupply}\n          </p>\n          <p className=\"cost\">\n            Jox Collection NFT cost {Number(data.cost) / 10 ** 18} ETH (excluding gas fees)\n          </p>\n        </div>\n      </div>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}