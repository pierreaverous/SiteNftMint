{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\SiteNftMint\\\\appnfts\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartcontratAdress = '0x264f6dCaBCB0d510613b11Df4ab22ab76b25DFa3';\nfunction SetCostForm(_ref) {\n  _s();\n  let {\n    setCostFunction\n  } = _ref;\n  const [cost, setCost] = useState(0);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setCostFunction(cost);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Set cost (in ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        min: \"0\",\n        value: cost,\n        onChange: e => setCost(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Set Cost\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 7\n  }, this);\n}\n\n// function SetPriceForm({ nftId, setPriceFunction }) {\n//   const [price, setPrice] = useState(0);\n//\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setPriceFunction(nftId, price);\n//   };\n//\n//   return (\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Set price (in ETH):\n//           <input\n//               type=\"number\"\n//               step=\"0.01\"\n//               min=\"0\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//           />\n//         </label>\n//         <button type=\"submit\">Set Price</button>\n//       </form>\n//   );\n// }\n_s(SetCostForm, \"wH3cwj5VwqbdaojsNyGzbNb0jbE=\");\n_c = SetCostForm;\nfunction SetPriceForm(_ref2) {\n  _s2();\n  let {\n    nftId,\n    setPriceFunction\n  } = _ref2;\n  const [price, setPrice] = useState(0);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setPriceFunction(nftId, price.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Set price (in ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        min: \"0\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Set Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n}\n_s2(SetPriceForm, \"+QVXHEEfqh9dTGOqNCLRXy2UMcU=\");\n_c2 = SetPriceForm;\nfunction NFTCard(_ref3) {\n  let {\n    nft,\n    mintFunction,\n    setPriceFunction\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nftImage\",\n      src: nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"),\n      alt: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintFunction(nft.edition),\n      children: [\"Mint NFT \", nft.edition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SetPriceForm, {\n      nftId: nft.edition,\n      setPriceFunction: setPriceFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setPriceFunction(nft.edition, \"0.05\"),\n      children: \"Set price to 0.05 ETH\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 7\n  }, this);\n}\n_c3 = NFTCard;\nfunction App() {\n  _s3();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {\n          cost: String(cost),\n          totalSupply: String(totalSupply)\n        };\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vérification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setCost(cost) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vérification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT cost.\");\n        }\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setCost(ethers.utils.parseEther(cost), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vérification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"withdraw\",\n      onClick: withdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery\",\n        children: nftData.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n          nft: nft,\n          mintFunction: mint,\n          setPriceFunction: setNftPrice\n        }, nft.edition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint a Jox NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [data.totalSupply, \"/\", data.maxSupply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cost\",\n        children: [\"Jox Collection NFT cost \", Number(data.cost) / 10 ** 18, \" ETH (excluding gas fees)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 11\n      }, this), account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"set-price-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Set NFT Prices\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          children: [nftData.map(nft => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"NFT \", nft.edition, \":\", \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                step: \"0.01\",\n                min: \"0\",\n                value: nftPrices[nft.edition] / 10 ** 18 || \"\",\n                onChange: e => {\n                  const value = e.target.value.trim();\n                  if (value) {\n                    setNftPrices(prevState => ({\n                      ...prevState,\n                      [nft.edition]: ethers.utils.parseEther(value)\n                    }));\n                  } else {\n                    setNftPrices(prevState => {\n                      const newState = {\n                        ...prevState\n                      };\n                      delete newState[nft.edition];\n                      return newState;\n                    });\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 27\n              }, this), \" \", \"ETH\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 25\n            }, this)\n          }, nft.edition, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 23\n          }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: handleSetPrices,\n            children: \"Set Prices\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 261,\n    columnNumber: 7\n  }, this);\n}\n_s3(App, \"2BGA2Z5gzNji+rNAX3sMIQu9KMI=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SetCostForm\");\n$RefreshReg$(_c2, \"SetPriceForm\");\n$RefreshReg$(_c3, \"NFTCard\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","SmartContrat","dataNft","jsxDEV","_jsxDEV","smartcontratAdress","SetCostForm","_ref","_s","setCostFunction","cost","setCost","handleSubmit","e","preventDefault","onSubmit","children","type","step","min","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","SetPriceForm","_ref2","_s2","nftId","setPriceFunction","price","setPrice","toString","_c2","NFTCard","_ref3","nft","mintFunction","className","name","src","image","replace","alt","onClick","edition","_c3","App","_s3","error","setError","data","setData","account","setAccount","nftData","setNftData","fetchData","getAccounts","window","ethereum","accounts","request","method","console","log","err","message","provider","providers","Web3Provider","contract","Contract","abi","totalSupply","object","String","mint","signer","getSigner","overrides","from","utils","parseEther","Number","gasLimit","transaction","wait","setNftPrice","contractOwner","owner","toLowerCase","Error","withdraw","map","maxSupply","nftPrices","trim","setNftPrices","prevState","newState","handleSetPrices","_c4","$RefreshReg$"],"sources":["C:/Users/pierr/Documents/SiteNftMint/appnfts/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\n\nconst smartcontratAdress = '0x264f6dCaBCB0d510613b11Df4ab22ab76b25DFa3';\n\nfunction SetCostForm({ setCostFunction }) {\n  const [cost, setCost] = useState(0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setCostFunction(cost);\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Set cost (in ETH):\n          <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              value={cost}\n              onChange={(e) => setCost(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Set Cost</button>\n      </form>\n  );\n}\n\n// function SetPriceForm({ nftId, setPriceFunction }) {\n//   const [price, setPrice] = useState(0);\n//\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n//     setPriceFunction(nftId, price);\n//   };\n//\n//   return (\n//       <form onSubmit={handleSubmit}>\n//         <label>\n//           Set price (in ETH):\n//           <input\n//               type=\"number\"\n//               step=\"0.01\"\n//               min=\"0\"\n//               value={price}\n//               onChange={(e) => setPrice(e.target.value)}\n//           />\n//         </label>\n//         <button type=\"submit\">Set Price</button>\n//       </form>\n//   );\n// }\nfunction SetPriceForm({ nftId, setPriceFunction }) {\n  const [price, setPrice] = useState(0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setPriceFunction(nftId, price.toString());\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Set price (in ETH):\n          <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Set Price</button>\n      </form>\n  );\n}\n\nfunction NFTCard({ nft, mintFunction, setPriceFunction }) {\n  return (\n      <div className=\"nft-card\">\n        <h2>{nft.name}</h2>\n        <img\n            className=\"nftImage\"\n            src={nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\n            alt={nft.name}\n        />\n        <button onClick={() => mintFunction(nft.edition)}>\n          Mint NFT {nft.edition}\n        </button>\n        <SetPriceForm nftId={nft.edition} setPriceFunction={setPriceFunction} />\n        <button onClick={() => setPriceFunction(nft.edition, \"0.05\")}>\n          Set price to 0.05 ETH\n        </button>\n      </div>\n  );\n}\n\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {cost: String(cost), totalSupply: String(totalSupply)};\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000,\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vérification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setCost(cost) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vérification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT cost.\");\n        }\n\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setCost(ethers.utils.parseEther(cost), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vérification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  return (\n      <div className=\"App\">\n        {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n            <button className=\"withdraw\" onClick={withdraw}>\n              Withdraw\n            </button>\n        )}\n        <div className=\"container\">\n          <div className=\"nft-gallery\">\n            {nftData.map((nft) => (\n                <NFTCard\n                    key={nft.edition}\n                    nft={nft}\n                    mintFunction={mint}\n                    setPriceFunction={setNftPrice}\n                />\n            ))}\n          </div>\n          {error && <p>{error}</p>}\n          <h1>Mint a Jox NFT</h1>\n          <p className=\"count\">\n            {data.totalSupply}/{data.maxSupply}\n          </p>\n          <p className=\"cost\">\n            Jox Collection NFT cost {Number(data.cost) / 10 ** 18} ETH (excluding gas fees)\n          </p>\n          {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n              <div className=\"set-price-form\">\n                <h2>Set NFT Prices</h2>\n                <form>\n                  {nftData.map((nft) => (\n                      <div key={nft.edition}>\n                        <label>\n                          NFT {nft.edition}:{\" \"}\n                          <input\n                              type=\"number\"\n                              step=\"0.01\"\n                              min=\"0\"\n                              value={nftPrices[nft.edition] / 10 ** 18 || \"\"}\n                              onChange={(e) => {\n                                const value = e.target.value.trim();\n                                if (value) {\n                                  setNftPrices((prevState) => ({\n                                    ...prevState,\n                                    [nft.edition]: ethers.utils.parseEther(value),\n                                  }));\n                                } else {\n                                  setNftPrices((prevState) => {\n                                    const newState = { ...prevState };\n                                    delete newState[nft.edition];\n                                    return newState;\n                                  });\n                                }\n                              }}\n                          />{\" \"}\n                          ETH\n                        </label>\n                      </div>\n                  ))}\n                  <button type=\"submit\" onClick={handleSetPrices}>\n                    Set Prices\n                  </button>\n                </form>\n              </div>\n          )}\n        </div>\n      </div>\n  );\n\n}\nexport default App;"],"mappings":";;;;AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,YAAY,MAAM,0DAA0D;AACnF,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,kBAAkB,GAAG,4CAA4C;AAEvE,SAASC,WAAWA,CAAAC,IAAA,EAAsB;EAAAC,EAAA;EAAA,IAArB;IAAEC;EAAgB,CAAC,GAAAF,IAAA;EACtC,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EAEnC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBL,eAAe,CAACC,IAAI,CAAC;EACvB,CAAC;EAED,oBACIN,OAAA;IAAMW,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3BZ,OAAA;MAAAY,QAAA,GAAO,oBAEL,eAAAZ,OAAA;QACIa,IAAI,EAAC,QAAQ;QACbC,IAAI,EAAC,MAAM;QACXC,GAAG,EAAC,GAAG;QACPC,KAAK,EAAEV,IAAK;QACZW,QAAQ,EAAGR,CAAC,IAAKF,OAAO,CAACE,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC3C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRtB,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAQ;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAClC;AAEb;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAAlB,EAAA,CAhDSF,WAAW;AAAAqB,EAAA,GAAXrB,WAAW;AAiDpB,SAASsB,YAAYA,CAAAC,KAAA,EAA8B;EAAAC,GAAA;EAAA,IAA7B;IAAEC,KAAK;IAAEC;EAAiB,CAAC,GAAAH,KAAA;EAC/C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGnC,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMa,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBkB,gBAAgB,CAACD,KAAK,EAAEE,KAAK,CAACE,QAAQ,EAAE,CAAC;EAC3C,CAAC;EAED,oBACI/B,OAAA;IAAMW,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3BZ,OAAA;MAAAY,QAAA,GAAO,qBAEL,eAAAZ,OAAA;QACIa,IAAI,EAAC,QAAQ;QACbC,IAAI,EAAC,MAAM;QACXC,GAAG,EAAC,GAAG;QACPC,KAAK,EAAEa,KAAM;QACbZ,QAAQ,EAAGR,CAAC,IAAKqB,QAAQ,CAACrB,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRtB,OAAA;MAAQa,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnC;AAEb;AAACI,GAAA,CAvBQF,YAAY;AAAAQ,GAAA,GAAZR,YAAY;AAyBrB,SAASS,OAAOA,CAAAC,KAAA,EAA0C;EAAA,IAAzC;IAAEC,GAAG;IAAEC,YAAY;IAAER;EAAiB,CAAC,GAAAM,KAAA;EACtD,oBACIlC,OAAA;IAAKqC,SAAS,EAAC,UAAU;IAAAzB,QAAA,gBACvBZ,OAAA;MAAAY,QAAA,EAAKuB,GAAG,CAACG;IAAI;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnBtB,OAAA;MACIqC,SAAS,EAAC,UAAU;MACpBE,GAAG,EAAEJ,GAAG,CAACK,KAAK,CAACC,OAAO,CAAC,SAAS,EAAE,uBAAuB,CAAE;MAC3DC,GAAG,EAAEP,GAAG,CAACG;IAAK;MAAAnB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB,eACFtB,OAAA;MAAQ2C,OAAO,EAAEA,CAAA,KAAMP,YAAY,CAACD,GAAG,CAACS,OAAO,CAAE;MAAAhC,QAAA,GAAC,WACvC,EAACuB,GAAG,CAACS,OAAO;IAAA;MAAAzB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd,eACTtB,OAAA,CAACwB,YAAY;MAACG,KAAK,EAAEQ,GAAG,CAACS,OAAQ;MAAChB,gBAAgB,EAAEA;IAAiB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eACxEtB,OAAA;MAAQ2C,OAAO,EAAEA,CAAA,KAAMf,gBAAgB,CAACO,GAAG,CAACS,OAAO,EAAE,MAAM,CAAE;MAAAhC,QAAA,EAAC;IAE9D;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACL;AAEZ;AAACuB,GAAA,GAlBQZ,OAAO;AAqBhB,SAASa,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACuD,IAAI,EAAEC,OAAO,CAAC,GAAGxD,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACyD,OAAO,EAAEC,UAAU,CAAC,GAAG1D,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC2D,OAAO,EAAEC,UAAU,CAAC,GAAG5D,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACd8D,SAAS,EAAE;IACXC,WAAW,EAAE;IACbF,UAAU,CAACzD,OAAO,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAe2D,WAAWA,CAAA,EAAG;IAC3B,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAACC,MAAM,EAAE;QAAqB,CAAC,CAAC;QAC/ET,UAAU,CAACO,QAAQ,CAAC;QACpBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EAEA,eAAeV,SAASA,CAAA,EAAG;IACzB,IAAI,OAAOE,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,MAAMQ,QAAQ,GAAG,IAAIvE,MAAM,CAACwE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMW,QAAQ,GAAG,IAAI1E,MAAM,CAAC2E,QAAQ,CAACtE,kBAAkB,EAAEJ,YAAY,CAAC2E,GAAG,EAAEL,QAAQ,CAAC;MACpF,IAAI;QACF,MAAM7D,IAAI,GAAG,MAAMgE,QAAQ,CAAChE,IAAI,EAAE;QAClC,MAAMmE,WAAW,GAAG,MAAMH,QAAQ,CAACG,WAAW,EAAE;QAChD,MAAMC,MAAM,GAAG;UAACpE,IAAI,EAAEqE,MAAM,CAACrE,IAAI,CAAC;UAAEmE,WAAW,EAAEE,MAAM,CAACF,WAAW;QAAC,CAAC;QACrEtB,OAAO,CAACuB,MAAM,CAAC;MACjB,CAAC,CAAC,OAAOT,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EACA,eAAeU,IAAIA,CAAChC,OAAO,EAAE;IAC3B,IAAI,OAAOc,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAACC,MAAM,EAAE;QAAqB,CAAC,CAAC;QAC/E,MAAMK,QAAQ,GAAG,IAAIvE,MAAM,CAACwE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMkB,MAAM,GAAGV,QAAQ,CAACW,SAAS,EAAE;QACnC,MAAMR,QAAQ,GAAG,IAAI1E,MAAM,CAAC2E,QAAQ,CAACtE,kBAAkB,EAAEJ,YAAY,CAAC2E,GAAG,EAAEK,MAAM,CAAC;QAClF,MAAME,SAAS,GAAG;UAChBC,IAAI,EAAEpB,QAAQ,CAAC,CAAC,CAAC;UACjB5C,KAAK,EAAEpB,MAAM,CAACqF,KAAK,CAACC,UAAU,CAACP,MAAM,CAACQ,MAAM,CAACjC,IAAI,CAAC5C,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;UACpE8E,QAAQ,EAAE;QACZ,CAAC;QACD,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACM,IAAI,CAAChB,QAAQ,CAAC,CAAC,CAAC,EAAEhB,OAAO,EAAEmC,SAAS,CAAC;QACxE,MAAMM,WAAW,CAACC,IAAI,EAAE;QACxB9B,SAAS,EAAE;MACb,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EACA,eAAeqB,WAAWA,CAAC5D,KAAK,EAAEE,KAAK,EAAE;IACvC,IAAI,OAAO6B,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjF,MAAMK,QAAQ,GAAG,IAAIvE,MAAM,CAACwE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMkB,MAAM,GAAGV,QAAQ,CAACW,SAAS,EAAE;QACnC,MAAMR,QAAQ,GAAG,IAAI1E,MAAM,CAAC2E,QAAQ,CAACtE,kBAAkB,EAAEJ,YAAY,CAAC2E,GAAG,EAAEK,MAAM,CAAC;;QAElF;QACA,MAAMW,aAAa,GAAG,MAAMlB,QAAQ,CAACmB,KAAK,EAAE;QAC5C,IAAI7B,QAAQ,CAAC,CAAC,CAAC,CAAC8B,WAAW,EAAE,KAAKF,aAAa,CAACE,WAAW,EAAE,EAAE;UAC7D,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;QACnE;QAEA,MAAMZ,SAAS,GAAG;UAChBC,IAAI,EAAEpB,QAAQ,CAAC,CAAC,CAAC;UACjBwB,QAAQ,EAAE;QACZ,CAAC;QACD,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACiB,WAAW,CAAC5D,KAAK,EAAE/B,MAAM,CAACqF,KAAK,CAACC,UAAU,CAACrD,KAAK,CAAC,EAAEkD,SAAS,CAAC;QAChG,MAAMM,WAAW,CAACC,IAAI,EAAE;QACxB9B,SAAS,EAAE;MACb,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EACA,eAAe3D,OAAOA,CAACD,IAAI,EAAE;IAC3B,IAAI,OAAOoD,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjF,MAAMK,QAAQ,GAAG,IAAIvE,MAAM,CAACwE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMkB,MAAM,GAAGV,QAAQ,CAACW,SAAS,EAAE;QACnC,MAAMR,QAAQ,GAAG,IAAI1E,MAAM,CAAC2E,QAAQ,CAACtE,kBAAkB,EAAEJ,YAAY,CAAC2E,GAAG,EAAEK,MAAM,CAAC;;QAElF;QACA,MAAMW,aAAa,GAAG,MAAMlB,QAAQ,CAACmB,KAAK,EAAE;QAC5C,IAAI7B,QAAQ,CAAC,CAAC,CAAC,CAAC8B,WAAW,EAAE,KAAKF,aAAa,CAACE,WAAW,EAAE,EAAE;UAC7D,MAAM,IAAIC,KAAK,CAAC,+CAA+C,CAAC;QAClE;QAEA,MAAMZ,SAAS,GAAG;UAChBC,IAAI,EAAEpB,QAAQ,CAAC,CAAC,CAAC;UACjBwB,QAAQ,EAAE;QACZ,CAAC;QACD,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAAC/D,OAAO,CAACX,MAAM,CAACqF,KAAK,CAACC,UAAU,CAAC5E,IAAI,CAAC,EAAEyE,SAAS,CAAC;QACpF,MAAMM,WAAW,CAACC,IAAI,EAAE;QACxB9B,SAAS,EAAE;MACb,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EAIA,eAAe0B,QAAQA,CAAA,EAAG;IACxB,IAAI,OAAOlC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAACC,MAAM,EAAE;QAAqB,CAAC,CAAC;QAC/E,MAAMK,QAAQ,GAAG,IAAIvE,MAAM,CAACwE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMkB,MAAM,GAAGV,QAAQ,CAACW,SAAS,EAAE;QACnC,MAAMR,QAAQ,GAAG,IAAI1E,MAAM,CAAC2E,QAAQ,CAACtE,kBAAkB,EAAEJ,YAAY,CAAC2E,GAAG,EAAEK,MAAM,CAAC;QAClF,MAAMQ,WAAW,GAAG,MAAMf,QAAQ,CAACsB,QAAQ,EAAE;QAC7C,MAAMP,WAAW,CAACC,IAAI,EAAE;QACxB9B,SAAS,EAAE;MACb,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EACA,eAAeqB,WAAWA,CAAC5D,KAAK,EAAEE,KAAK,EAAE;IACvC,IAAI,OAAO6B,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjF,MAAMK,QAAQ,GAAG,IAAIvE,MAAM,CAACwE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMkB,MAAM,GAAGV,QAAQ,CAACW,SAAS,EAAE;QACnC,MAAMR,QAAQ,GAAG,IAAI1E,MAAM,CAAC2E,QAAQ,CAACtE,kBAAkB,EAAEJ,YAAY,CAAC2E,GAAG,EAAEK,MAAM,CAAC;;QAElF;QACA,MAAMW,aAAa,GAAG,MAAMlB,QAAQ,CAACmB,KAAK,EAAE;QAC5C,IAAI7B,QAAQ,CAAC,CAAC,CAAC,CAAC8B,WAAW,EAAE,KAAKF,aAAa,CAACE,WAAW,EAAE,EAAE;UAC7D,MAAM,IAAIC,KAAK,CAAC,gDAAgD,CAAC;QACnE;QAEA,MAAMZ,SAAS,GAAG;UAChBC,IAAI,EAAEpB,QAAQ,CAAC,CAAC,CAAC;UACjBwB,QAAQ,EAAE;QACZ,CAAC;QACD,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACiB,WAAW,CAAC5D,KAAK,EAAE/B,MAAM,CAACqF,KAAK,CAACC,UAAU,CAACrD,KAAK,CAAC,EAAEkD,SAAS,CAAC;QAChG,MAAMM,WAAW,CAACC,IAAI,EAAE;QACxB9B,SAAS,EAAE;MACb,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EAGA,oBACIlE,OAAA;IAAKqC,SAAS,EAAC,KAAK;IAAAzB,QAAA,GACjBwC,OAAO,CAAC,CAAC,CAAC,KAAK,4CAA4C,iBACxDpD,OAAA;MAAQqC,SAAS,EAAC,UAAU;MAACM,OAAO,EAAEiD,QAAS;MAAAhF,QAAA,EAAC;IAEhD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,eACDtB,OAAA;MAAKqC,SAAS,EAAC,WAAW;MAAAzB,QAAA,gBACxBZ,OAAA;QAAKqC,SAAS,EAAC,aAAa;QAAAzB,QAAA,EACzB0C,OAAO,CAACuC,GAAG,CAAE1D,GAAG,iBACbnC,OAAA,CAACiC,OAAO;UAEJE,GAAG,EAAEA,GAAI;UACTC,YAAY,EAAEwC,IAAK;UACnBhD,gBAAgB,EAAE2D;QAAY,GAHzBpD,GAAG,CAACS,OAAO;UAAAzB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAKvB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,EACL0B,KAAK,iBAAIhD,OAAA;QAAAY,QAAA,EAAIoC;MAAK;QAAA7B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBtB,OAAA;QAAAY,QAAA,EAAI;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvBtB,OAAA;QAAGqC,SAAS,EAAC,OAAO;QAAAzB,QAAA,GACjBsC,IAAI,CAACuB,WAAW,EAAC,GAAC,EAACvB,IAAI,CAAC4C,SAAS;MAAA;QAAA3E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChC,eACJtB,OAAA;QAAGqC,SAAS,EAAC,MAAM;QAAAzB,QAAA,GAAC,0BACM,EAACuE,MAAM,CAACjC,IAAI,CAAC5C,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,2BACxD;MAAA;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI,EACH8B,OAAO,CAAC,CAAC,CAAC,KAAK,4CAA4C,iBACxDpD,OAAA;QAAKqC,SAAS,EAAC,gBAAgB;QAAAzB,QAAA,gBAC7BZ,OAAA;UAAAY,QAAA,EAAI;QAAc;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAK,eACvBtB,OAAA;UAAAY,QAAA,GACG0C,OAAO,CAACuC,GAAG,CAAE1D,GAAG,iBACbnC,OAAA;YAAAY,QAAA,eACEZ,OAAA;cAAAY,QAAA,GAAO,MACD,EAACuB,GAAG,CAACS,OAAO,EAAC,GAAC,EAAC,GAAG,eACtB5C,OAAA;gBACIa,IAAI,EAAC,QAAQ;gBACbC,IAAI,EAAC,MAAM;gBACXC,GAAG,EAAC,GAAG;gBACPC,KAAK,EAAE+E,SAAS,CAAC5D,GAAG,CAACS,OAAO,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAG;gBAC/C3B,QAAQ,EAAGR,CAAC,IAAK;kBACf,MAAMO,KAAK,GAAGP,CAAC,CAACS,MAAM,CAACF,KAAK,CAACgF,IAAI,EAAE;kBACnC,IAAIhF,KAAK,EAAE;oBACTiF,YAAY,CAAEC,SAAS,KAAM;sBAC3B,GAAGA,SAAS;sBACZ,CAAC/D,GAAG,CAACS,OAAO,GAAGhD,MAAM,CAACqF,KAAK,CAACC,UAAU,CAAClE,KAAK;oBAC9C,CAAC,CAAC,CAAC;kBACL,CAAC,MAAM;oBACLiF,YAAY,CAAEC,SAAS,IAAK;sBAC1B,MAAMC,QAAQ,GAAG;wBAAE,GAAGD;sBAAU,CAAC;sBACjC,OAAOC,QAAQ,CAAChE,GAAG,CAACS,OAAO,CAAC;sBAC5B,OAAOuD,QAAQ;oBACjB,CAAC,CAAC;kBACJ;gBACF;cAAE;gBAAAhF,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,QACJ,EAAC,GAAG,EAAC,KAET;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA;UAAQ,GAzBAa,GAAG,CAACS,OAAO;YAAAzB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QA2BxB,CAAC,eACFtB,OAAA;YAAQa,IAAI,EAAC,QAAQ;YAAC8B,OAAO,EAAEyD,eAAgB;YAAAxF,QAAA,EAAC;UAEhD;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAS;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QACJ;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAEZ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAGZ;AAACyB,GAAA,CAjOQD,GAAG;AAAAuD,GAAA,GAAHvD,GAAG;AAkOZ,eAAeA,GAAG;AAAC,IAAAvB,EAAA,EAAAS,GAAA,EAAAa,GAAA,EAAAwD,GAAA;AAAAC,YAAA,CAAA/E,EAAA;AAAA+E,YAAA,CAAAtE,GAAA;AAAAsE,YAAA,CAAAzD,GAAA;AAAAyD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}