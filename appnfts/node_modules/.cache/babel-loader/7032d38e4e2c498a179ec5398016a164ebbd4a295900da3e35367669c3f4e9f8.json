{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\SiteNftMint\\\\appnfts\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartcontratAdress = '0x6C0F01619fE0303419cB6158Cc3639418E4DDaF0';\nasync function fetchData() {\n  if (typeof window.ethereum !== 'undefined') {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n    try {\n      const cost = await contract.cost();\n      const totalSupply = await contract.totalSupply();\n      const object = {\n        cost: String(cost),\n        totalSupply: String(totalSupply)\n      };\n      setData(object);\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n}\nasync function setCost(newCost) {\n  if (typeof window.ethereum !== 'undefined') {\n    try {\n      const accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      const overrides = {\n        from: accounts[0],\n        gasLimit: 2900000\n      };\n      const transaction = await contract.setCost(ethers.utils.parseEther(newCost), overrides);\n      await transaction.wait();\n      fetchData();\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n}\nfunction NFTCard(_ref) {\n  let {\n    nft,\n    mintFunction,\n    setPriceFunction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nftImage\",\n      src: nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"),\n      alt: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintFunction(nft.edition),\n      children: [\"Mint NFT \", nft.edition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        setCost(e.target.cost.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        name: \"cost\",\n        placeholder: \"New cost\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n}\n_c = NFTCard;\nfunction App() {\n  _s();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vÃ©rification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"withdraw\",\n      onClick: withdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery\",\n        children: nftData.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n          nft: nft,\n          mintFunction: mint,\n          setPriceFunction: setNftPrice\n        }, nft.edition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint a Jox NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [data.totalSupply, \"/\", data.maxSupply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cost\",\n        children: [\"Jox Collection NFT cost \", Number(data.cost) / 10 ** 18, \" ETH (excluding gas fees)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"2BGA2Z5gzNji+rNAX3sMIQu9KMI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NFTCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","SmartContrat","dataNft","jsxDEV","_jsxDEV","smartcontratAdress","fetchData","window","ethereum","provider","providers","Web3Provider","contract","Contract","abi","cost","totalSupply","object","String","setData","err","setError","message","setCost","newCost","accounts","request","method","signer","getSigner","overrides","from","gasLimit","transaction","utils","parseEther","wait","NFTCard","_ref","nft","mintFunction","setPriceFunction","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","replace","alt","onClick","edition","onSubmit","e","preventDefault","target","value","type","step","placeholder","required","_c","App","_s","error","data","account","setAccount","nftData","setNftData","getAccounts","console","log","mint","Number","setNftPrice","nftId","price","contractOwner","owner","toLowerCase","Error","withdraw","map","maxSupply","_c2","$RefreshReg$"],"sources":["C:/Users/pierr/Documents/SiteNftMint/appnfts/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\n\nconst smartcontratAdress = '0x6C0F01619fE0303419cB6158Cc3639418E4DDaF0';\nasync function fetchData() {\n  if (typeof window.ethereum !== 'undefined') {\n    const provider = new ethers.providers.Web3Provider(window.ethereum);\n    const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n    try {\n      const cost = await contract.cost();\n      const totalSupply = await contract.totalSupply();\n      const object = {cost: String(cost), totalSupply: String(totalSupply)};\n      setData(object);\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n}\nasync function setCost(newCost) {\n  if (typeof window.ethereum !== 'undefined') {\n    try {\n      const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      const overrides = {\n        from: accounts[0],\n        gasLimit: 2900000,\n      };\n      const transaction = await contract.setCost(ethers.utils.parseEther(newCost), overrides);\n      await transaction.wait();\n      fetchData();\n    } catch (err) {\n      setError(err.message);\n    }\n  }\n}\nfunction NFTCard({ nft, mintFunction, setPriceFunction }) {\n  return (\n      <div className=\"nft-card\">\n        <h2>{nft.name}</h2>\n        <img\n            className=\"nftImage\"\n            src={nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\n            alt={nft.name}\n        />\n        <button onClick={() => mintFunction(nft.edition)}>\n          Mint NFT {nft.edition}\n        </button>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          setCost(e.target.cost.value);\n        }}>\n          <input type=\"number\" step=\"0.01\" name=\"cost\" placeholder=\"New cost\" required />\n          <button type=\"submit\">Set cost</button>\n        </form>\n      </div>\n  );\n}\n\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000,\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vÃ©rification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  return (\n      <div className=\"App\">\n        {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n            <button className=\"withdraw\" onClick={withdraw}>\n              Withdraw\n            </button>\n        )}\n        <div className=\"container\">\n          <div className=\"nft-gallery\">\n            {nftData.map((nft) => (\n                <NFTCard key={nft.edition} nft={nft} mintFunction={mint} setPriceFunction={setNftPrice}/>\n\n            ))}\n          </div>\n          {error && <p>{error}</p>}\n          <h1>Mint a Jox NFT</h1>\n          <p className=\"count\">\n            {data.totalSupply}/{data.maxSupply}\n          </p>\n          <p className=\"cost\">\n            Jox Collection NFT cost {Number(data.cost) / 10 ** 18} ETH (excluding gas fees)\n          </p>\n        </div>\n      </div>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}