{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\Nfts\\\\appnfts\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from \"./_metadata.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartcontratAdress = '0x7D0909d43406c4439E96f528F98253c6610A557F';\nfunction NFTCard(_ref) {\n  let {\n    nft,\n    mintFunction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"),\n      alt: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintFunction(nft.edition),\n      children: [\"Mint NFT \", nft.edition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 7\n  }, this);\n}\n_c = NFTCard;\nfunction App() {\n  _s();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    fetchMetadata();\n  }, []);\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      let accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setAccount(accounts);\n      console.log(accounts[0]);\n    }\n  }\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {\n          cost: String(cost),\n          totalSupply: String(totalSupply)\n        };\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function fetchMetadata() {\n    const response = await fetch(dataNft);\n    const data = await response.json();\n    setNftData(data);\n    console.log(response);\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      let accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      try {\n        let overrides = {\n          from: accounts[0],\n          value: data.cost\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      let accounts = await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      try {\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"withdraw\",\n      onClick: withdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery\",\n        children: nftData.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n          nft: nft,\n          mintFunction: mint\n        }, nft.edition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint a Jox NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [data.totalSupply, \"/50\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cost\",\n        children: [\"Jox Collection NFT cost \", data.cost / 10 ** 18, \" ETH (excluding gas fees)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"2BGA2Z5gzNji+rNAX3sMIQu9KMI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NFTCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","SmartContrat","dataNft","jsxDEV","_jsxDEV","smartcontratAdress","NFTCard","_ref","nft","mintFunction","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","replace","alt","onClick","edition","_c","App","_s","error","setError","data","setData","account","setAccount","nftData","setNftData","fetchData","getAccounts","fetchMetadata","window","ethereum","accounts","request","method","console","log","provider","providers","Web3Provider","contract","Contract","abi","cost","totalSupply","object","String","err","message","response","fetch","json","mint","signer","getSigner","overrides","from","value","transaction","wait","withdraw","map","_c2","$RefreshReg$"],"sources":["C:/Users/pierr/Documents/Nfts/appnfts/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from \"./_metadata.json\"\n\nconst smartcontratAdress = '0x7D0909d43406c4439E96f528F98253c6610A557F';\n\nfunction NFTCard({ nft, mintFunction }) {\n  return (\n      <div className=\"nft-card\">\n        <h2>{nft.name}</h2>\n        <img src={nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")} alt={nft.name} />\n        <button onClick={() => mintFunction(nft.edition)}>Mint NFT {nft.edition}</button>\n      </div>\n  );\n}\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    fetchMetadata();\n  }, []);\n\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      let accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      setAccount(accounts);\n      console.log(accounts[0]);\n    }\n  }\n\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = { cost: String(cost), totalSupply: String(totalSupply) };\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function fetchMetadata() {\n    const response = await fetch(dataNft);\n    const data = await response.json();\n    setNftData(data);\n    console.log(response)\n  }\n\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      let accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      try {\n        let overrides = {\n          from: accounts[0],\n          value: data.cost,\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      let accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n      try {\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  return (\n      <div className=\"App\">\n        {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n            <button className=\"withdraw\" onClick={withdraw}>\n              Withdraw\n            </button>\n        )}\n        <div className=\"container\">\n          <div className=\"nft-gallery\">\n            {nftData.map((nft) => (\n                <NFTCard key={nft.edition} nft={nft} mintFunction={mint} />\n            ))}\n          </div>\n          {error && <p>{error}</p>}\n          <h1>Mint a Jox NFT</h1>\n          <p className=\"count\">{data.totalSupply}/50</p>\n          <p className=\"cost\">\n            Jox Collection NFT cost {data.cost / 10 ** 18} ETH (excluding gas fees)\n          </p>\n        </div>\n      </div>\n  );\n\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}