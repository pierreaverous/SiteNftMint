{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\SiteNftMint\\\\appnfts\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartcontratAdress = '0x6C0F01619fE0303419cB6158Cc3639418E4DDaF0';\nfunction NFTCard(_ref) {\n  let {\n    nft,\n    mintFunction,\n    setPriceFunction\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nftImage\",\n      src: nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"),\n      alt: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintFunction(nft.edition),\n      children: [\"Mint NFT \", nft.edition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => {\n        e.preventDefault();\n        setCost(e.target.cost.value);\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        name: \"cost\",\n        placeholder: \"New cost\",\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Set cost\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n_c = NFTCard;\nfunction App() {\n  _s();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n  async function setCost(newCost) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setCost(ethers.utils.parseEther(newCost), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  function NFTCard(_ref2) {\n    let {\n      nft,\n      mintFunction,\n      setPriceFunction\n    } = _ref2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nft-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: nft.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"nftImage\",\n        src: nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"),\n        alt: nft.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => mintFunction(nft.edition),\n        children: [\"Mint NFT \", nft.edition]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          e.preventDefault();\n          setCost(e.target.cost.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          step: \"0.01\",\n          name: \"cost\",\n          placeholder: \"New cost\",\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Set cost\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this);\n  }\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {\n          cost: String(cost),\n          totalSupply: String(totalSupply)\n        };\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vÃ©rification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"withdraw\",\n      onClick: withdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery\",\n        children: nftData.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n          nft: nft,\n          mintFunction: mint,\n          setPriceFunction: setNftPrice\n        }, nft.edition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint a Jox NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [data.totalSupply, \"/\", data.maxSupply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cost\",\n        children: [\"Jox Collection NFT cost \", Number(data.cost) / 10 ** 18, \" ETH (excluding gas fees)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 7\n  }, this);\n}\n_s(App, \"2BGA2Z5gzNji+rNAX3sMIQu9KMI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NFTCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","SmartContrat","dataNft","jsxDEV","_jsxDEV","smartcontratAdress","NFTCard","_ref","nft","mintFunction","setPriceFunction","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","replace","alt","onClick","edition","onSubmit","e","preventDefault","setCost","target","cost","value","type","step","placeholder","required","_c","App","_s","error","setError","data","setData","account","setAccount","nftData","setNftData","fetchData","getAccounts","newCost","window","ethereum","accounts","request","method","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","overrides","from","gasLimit","transaction","utils","parseEther","wait","err","message","_ref2","console","log","totalSupply","object","String","mint","Number","setNftPrice","nftId","price","contractOwner","owner","toLowerCase","Error","withdraw","map","maxSupply","_c2","$RefreshReg$"],"sources":["C:/Users/pierr/Documents/SiteNftMint/appnfts/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\n\nconst smartcontratAdress = '0x6C0F01619fE0303419cB6158Cc3639418E4DDaF0';\n\n\nfunction NFTCard({ nft, mintFunction, setPriceFunction }) {\n  return (\n      <div className=\"nft-card\">\n        <h2>{nft.name}</h2>\n        <img\n            className=\"nftImage\"\n            src={nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\n            alt={nft.name}\n        />\n        <button onClick={() => mintFunction(nft.edition)}>\n          Mint NFT {nft.edition}\n        </button>\n        <form onSubmit={(e) => {\n          e.preventDefault();\n          setCost(e.target.cost.value);\n        }}>\n          <input type=\"number\" step=\"0.01\" name=\"cost\" placeholder=\"New cost\" required />\n          <button type=\"submit\">Set cost</button>\n        </form>\n      </div>\n  );\n}\n\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n  async function setCost(newCost) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setCost(ethers.utils.parseEther(newCost), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  function NFTCard({ nft, mintFunction, setPriceFunction }) {\n    return (\n        <div className=\"nft-card\">\n          <h2>{nft.name}</h2>\n          <img\n              className=\"nftImage\"\n              src={nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\n              alt={nft.name}\n          />\n          <button onClick={() => mintFunction(nft.edition)}>\n            Mint NFT {nft.edition}\n          </button>\n          <form onSubmit={(e) => {\n            e.preventDefault();\n            setCost(e.target.cost.value);\n          }}>\n            <input type=\"number\" step=\"0.01\" name=\"cost\" placeholder=\"New cost\" required />\n            <button type=\"submit\">Set cost</button>\n          </form>\n        </div>\n    );\n  }\n\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {cost: String(cost), totalSupply: String(totalSupply)};\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 9900000,\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Ajoutez cette vÃ©rification\n        const contractOwner = await contract.owner();\n        if (accounts[0].toLowerCase() !== contractOwner.toLowerCase()) {\n          throw new Error(\"Only the contract owner can set the NFT price.\");\n        }\n\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setNftPrice(nftId, ethers.utils.parseEther(price), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  return (\n      <div className=\"App\">\n        {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n            <button className=\"withdraw\" onClick={withdraw}>\n              Withdraw\n            </button>\n        )}\n        <div className=\"container\">\n          <div className=\"nft-gallery\">\n            {nftData.map((nft) => (\n                <NFTCard key={nft.edition} nft={nft} mintFunction={mint} setPriceFunction={setNftPrice}/>\n\n            ))}\n          </div>\n          {error && <p>{error}</p>}\n          <h1>Mint a Jox NFT</h1>\n          <p className=\"count\">\n            {data.totalSupply}/{data.maxSupply}\n          </p>\n          <p className=\"cost\">\n            Jox Collection NFT cost {Number(data.cost) / 10 ** 18} ETH (excluding gas fees)\n          </p>\n        </div>\n      </div>\n  );\n}\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}