{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\Nfts\\\\appnfts\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport ReactDOM from 'react-dom';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartcontratAdress = '0xb4A2cB1F0EB6c62b1fEfC810E98c081D038E61C8';\nfunction SetPriceForm(_ref) {\n  _s();\n  let {\n    nftId,\n    setPriceFunction\n  } = _ref;\n  const [price, setPrice] = useState(0);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setPriceFunction(nftId, price);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Set price (in ETH):\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        step: \"0.01\",\n        min: \"0\",\n        value: price,\n        onChange: e => setPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Set Price\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 7\n  }, this);\n}\n_s(SetPriceForm, \"+QVXHEEfqh9dTGOqNCLRXy2UMcU=\");\n_c = SetPriceForm;\nfunction NFTCard(_ref2) {\n  let {\n    nft,\n    mintFunction,\n    setPriceFunction\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nftImage\",\n      src: nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\"),\n      alt: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Price: \", Number(nft.price) / 10 ** 18, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintFunction(nft.edition),\n      children: [\"Mint NFT \", nft.edition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SetPriceForm, {\n      nftId: nft.edition,\n      setPriceFunction: setPriceFunction\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n_c2 = NFTCard;\nfunction App() {\n  _s2();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {\n          cost: String(cost),\n          totalSupply: String(totalSupply)\n        };\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Récupérer le prix du NFT à partir de _metadata.json\n        const nftPrice = dataNft.find(obj => obj.edition === edition).price;\n\n        // Afficher le formulaire pour permettre à l'utilisateur de définir le prix du NFT s'il est égal à 0\n        if (Number(nftPrice) === 0) {\n          const setPriceFunction = async (nftId, price) => {\n            try {\n              const overrides = {\n                gasLimit: 2900000\n              };\n              const transaction = await contract.setPrice(edition, ethers.utils.parseEther(String(Number(price) / 10 ** 18)), overrides);\n              await transaction.wait();\n              fetchData();\n            } catch (err) {\n              setError(err.message);\n            }\n          };\n          ReactDOM.render( /*#__PURE__*/_jsxDEV(SetPriceForm, {\n            nftId: edition,\n            setPriceFunction: setPriceFunction\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), document.getElementById(`nft-${edition}`));\n        } else {\n          const overrides = {\n            from: accounts[0],\n            value: ethers.utils.parseEther(String(Number(nftPrice) / 10 ** 18)),\n            gasLimit: 2900000\n          };\n          const transaction = await contract.mint(accounts[0], edition, overrides);\n          await transaction.wait();\n          fetchData();\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setPrice(nftId, ethers.utils.parseEther(String(price)), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"withdraw\",\n      onClick: withdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery\",\n        children: nftData.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n          nft: nft,\n          mintFunction: mint,\n          setPriceFunction: setPrice\n        }, nft.edition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint a Jox NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [data.totalSupply, \"/\", data.maxSupply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cost\",\n        children: [\"Jox Collection NFT cost \", Number(data.cost) / 10 ** 18, \" ETH (excluding gas fees)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 7\n  }, this);\n}\n_s2(App, \"2BGA2Z5gzNji+rNAX3sMIQu9KMI=\");\n_c3 = App;\nexport default App;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"SetPriceForm\");\n$RefreshReg$(_c2, \"NFTCard\");\n$RefreshReg$(_c3, \"App\");","map":{"version":3,"names":["React","useEffect","useState","ethers","ReactDOM","SmartContrat","dataNft","jsxDEV","_jsxDEV","smartcontratAdress","SetPriceForm","_ref","_s","nftId","setPriceFunction","price","setPrice","handleSubmit","e","preventDefault","onSubmit","children","type","step","min","value","onChange","target","fileName","_jsxFileName","lineNumber","columnNumber","_c","NFTCard","_ref2","nft","mintFunction","className","name","src","image","replace","alt","Number","onClick","edition","_c2","App","_s2","error","setError","data","setData","account","setAccount","nftData","setNftData","fetchData","getAccounts","window","ethereum","accounts","request","method","console","log","err","message","provider","providers","Web3Provider","contract","Contract","abi","cost","totalSupply","object","String","mint","signer","getSigner","nftPrice","find","obj","overrides","gasLimit","transaction","utils","parseEther","wait","render","document","getElementById","from","withdraw","map","maxSupply","_c3","$RefreshReg$"],"sources":["C:/Users/pierr/Documents/Nfts/appnfts/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport ReactDOM from 'react-dom';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\n\nconst smartcontratAdress = '0xb4A2cB1F0EB6c62b1fEfC810E98c081D038E61C8';\n\nfunction SetPriceForm({ nftId, setPriceFunction }) {\n  const [price, setPrice] = useState(0);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setPriceFunction(nftId, price);\n  };\n\n  return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Set price (in ETH):\n          <input\n              type=\"number\"\n              step=\"0.01\"\n              min=\"0\"\n              value={price}\n              onChange={(e) => setPrice(e.target.value)}\n          />\n        </label>\n        <button type=\"submit\">Set Price</button>\n      </form>\n  );\n}\n\nfunction NFTCard({ nft, mintFunction, setPriceFunction }) {\n  return (\n      <div className=\"nft-card\">\n        <h2>{nft.name}</h2>\n        <img\n            className=\"nftImage\"\n            src={nft.image.replace(\"ipfs://\", \"https://ipfs.io/ipfs/\")}\n            alt={nft.name}\n        />\n        <p>Price: {Number(nft.price) / 10 ** 18} ETH</p>\n        <button onClick={() => mintFunction(nft.edition)}>\n          Mint NFT {nft.edition}\n        </button>\n        <SetPriceForm nftId={nft.edition} setPriceFunction={setPriceFunction} />\n      </div>\n  );\n}\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {cost: String(cost), totalSupply: String(totalSupply)};\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n\n        // Récupérer le prix du NFT à partir de _metadata.json\n        const nftPrice = dataNft.find((obj) => obj.edition === edition).price;\n\n        // Afficher le formulaire pour permettre à l'utilisateur de définir le prix du NFT s'il est égal à 0\n        if (Number(nftPrice) === 0) {\n          const setPriceFunction = async (nftId, price) => {\n            try {\n              const overrides = {\n                gasLimit: 2900000,\n              };\n              const transaction = await contract.setPrice(edition, ethers.utils.parseEther(String(Number(price) / 10 ** 18)), overrides);\n              await transaction.wait();\n              fetchData();\n            } catch (err) {\n              setError(err.message);\n            }\n          };\n          ReactDOM.render(\n              <SetPriceForm nftId={edition} setPriceFunction={setPriceFunction} />,\n              document.getElementById(`nft-${edition}`)\n          );\n        } else {\n          const overrides = {\n            from: accounts[0],\n            value: ethers.utils.parseEther(String(Number(nftPrice) / 10 ** 18)),\n            gasLimit: 2900000,\n          };\n          const transaction = await contract.mint(accounts[0], edition, overrides);\n          await transaction.wait();\n          fetchData();\n        }\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({ method: 'eth_requestAccounts' });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setPrice(nftId, ethers.utils.parseEther(String(price)), overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  return (\n\n      <div className=\"App\">\n        {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n            <button className=\"withdraw\" onClick={withdraw}>\n              Withdraw\n            </button>\n        )}\n        <div className=\"container\">\n          <div className=\"nft-gallery\">\n            {nftData.map((nft) => (\n                <NFTCard key={nft.edition} nft={nft} mintFunction={mint} setPriceFunction={setPrice} />\n            ))}\n          </div>\n          {error && <p>{error}</p>}\n          <h1>Mint a Jox NFT</h1>\n          <p className=\"count\">\n            {data.totalSupply}/{data.maxSupply}\n          </p>\n          <p className=\"cost\">\n            Jox Collection NFT cost {Number(data.cost) / 10 ** 18} ETH (excluding gas fees)\n          </p>\n        </div>\n      </div>\n  );\n}\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,YAAY,MAAM,0DAA0D;AACnF,OAAO,WAAW;AAClB,OAAOC,OAAO,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,kBAAkB,GAAG,4CAA4C;AAEvE,SAASC,YAAYA,CAAAC,IAAA,EAA8B;EAAAC,EAAA;EAAA,IAA7B;IAAEC,KAAK;IAAEC;EAAiB,CAAC,GAAAH,IAAA;EAC/C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC;EAErC,MAAMe,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,EAAE;IAClBL,gBAAgB,CAACD,KAAK,EAAEE,KAAK,CAAC;EAChC,CAAC;EAED,oBACIP,OAAA;IAAMY,QAAQ,EAAEH,YAAa;IAAAI,QAAA,gBAC3Bb,OAAA;MAAAa,QAAA,GAAO,qBAEL,eAAAb,OAAA;QACIc,IAAI,EAAC,QAAQ;QACbC,IAAI,EAAC,MAAM;QACXC,GAAG,EAAC,GAAG;QACPC,KAAK,EAAEV,KAAM;QACbW,QAAQ,EAAGR,CAAC,IAAKF,QAAQ,CAACE,CAAC,CAACS,MAAM,CAACF,KAAK;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC5C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACI,eACRvB,OAAA;MAAQc,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAS;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAS;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACnC;AAEb;AAACnB,EAAA,CAvBQF,YAAY;AAAAsB,EAAA,GAAZtB,YAAY;AAyBrB,SAASuB,OAAOA,CAAAC,KAAA,EAA0C;EAAA,IAAzC;IAAEC,GAAG;IAAEC,YAAY;IAAEtB;EAAiB,CAAC,GAAAoB,KAAA;EACtD,oBACI1B,OAAA;IAAK6B,SAAS,EAAC,UAAU;IAAAhB,QAAA,gBACvBb,OAAA;MAAAa,QAAA,EAAKc,GAAG,CAACG;IAAI;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAM,eACnBvB,OAAA;MACI6B,SAAS,EAAC,UAAU;MACpBE,GAAG,EAAEJ,GAAG,CAACK,KAAK,CAACC,OAAO,CAAC,SAAS,EAAE,uBAAuB,CAAE;MAC3DC,GAAG,EAAEP,GAAG,CAACG;IAAK;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAChB,eACFvB,OAAA;MAAAa,QAAA,GAAG,SAAO,EAACsB,MAAM,CAACR,GAAG,CAACpB,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,MAAI;IAAA;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eAChDvB,OAAA;MAAQoC,OAAO,EAAEA,CAAA,KAAMR,YAAY,CAACD,GAAG,CAACU,OAAO,CAAE;MAAAxB,QAAA,GAAC,WACvC,EAACc,GAAG,CAACU,OAAO;IAAA;MAAAjB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACd,eACTvB,OAAA,CAACE,YAAY;MAACG,KAAK,EAAEsB,GAAG,CAACU,OAAQ;MAAC/B,gBAAgB,EAAEA;IAAiB;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACpE;AAEZ;AAACe,GAAA,GAhBQb,OAAO;AAkBhB,SAASc,GAAGA,CAAA,EAAG;EAAAC,GAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGhD,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACiD,IAAI,EAAEC,OAAO,CAAC,GAAGlD,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpC,MAAM,CAACmD,OAAO,EAAEC,UAAU,CAAC,GAAGpD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACqD,OAAO,EAAEC,UAAU,CAAC,GAAGtD,QAAQ,CAAC,EAAE,CAAC;EAE1CD,SAAS,CAAC,MAAM;IACdwD,SAAS,EAAE;IACXC,WAAW,EAAE;IACbF,UAAU,CAAClD,OAAO,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,eAAeoD,WAAWA,CAAA,EAAG;IAC3B,IAAI,OAAOC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAACC,MAAM,EAAE;QAAqB,CAAC,CAAC;QAC/ET,UAAU,CAACO,QAAQ,CAAC;QACpBG,OAAO,CAACC,GAAG,CAACJ,QAAQ,CAAC,CAAC,CAAC,CAAC;MAC1B,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EAEA,eAAeV,SAASA,CAAA,EAAG;IACzB,IAAI,OAAOE,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,MAAMQ,QAAQ,GAAG,IAAIjE,MAAM,CAACkE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMW,QAAQ,GAAG,IAAIpE,MAAM,CAACqE,QAAQ,CAAC/D,kBAAkB,EAAEJ,YAAY,CAACoE,GAAG,EAAEL,QAAQ,CAAC;MACpF,IAAI;QACF,MAAMM,IAAI,GAAG,MAAMH,QAAQ,CAACG,IAAI,EAAE;QAClC,MAAMC,WAAW,GAAG,MAAMJ,QAAQ,CAACI,WAAW,EAAE;QAChD,MAAMC,MAAM,GAAG;UAACF,IAAI,EAAEG,MAAM,CAACH,IAAI,CAAC;UAAEC,WAAW,EAAEE,MAAM,CAACF,WAAW;QAAC,CAAC;QACrEvB,OAAO,CAACwB,MAAM,CAAC;MACjB,CAAC,CAAC,OAAOV,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EAEA,eAAeW,IAAIA,CAACjC,OAAO,EAAE;IAC3B,IAAI,OAAOc,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAACC,MAAM,EAAE;QAAqB,CAAC,CAAC;QAC/E,MAAMK,QAAQ,GAAG,IAAIjE,MAAM,CAACkE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMmB,MAAM,GAAGX,QAAQ,CAACY,SAAS,EAAE;QACnC,MAAMT,QAAQ,GAAG,IAAIpE,MAAM,CAACqE,QAAQ,CAAC/D,kBAAkB,EAAEJ,YAAY,CAACoE,GAAG,EAAEM,MAAM,CAAC;;QAElF;QACA,MAAME,QAAQ,GAAG3E,OAAO,CAAC4E,IAAI,CAAEC,GAAG,IAAKA,GAAG,CAACtC,OAAO,KAAKA,OAAO,CAAC,CAAC9B,KAAK;;QAErE;QACA,IAAI4B,MAAM,CAACsC,QAAQ,CAAC,KAAK,CAAC,EAAE;UAC1B,MAAMnE,gBAAgB,GAAG,MAAAA,CAAOD,KAAK,EAAEE,KAAK,KAAK;YAC/C,IAAI;cACF,MAAMqE,SAAS,GAAG;gBAChBC,QAAQ,EAAE;cACZ,CAAC;cACD,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACvD,QAAQ,CAAC6B,OAAO,EAAE1C,MAAM,CAACoF,KAAK,CAACC,UAAU,CAACX,MAAM,CAAClC,MAAM,CAAC5B,KAAK,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,EAAEqE,SAAS,CAAC;cAC1H,MAAME,WAAW,CAACG,IAAI,EAAE;cACxBhC,SAAS,EAAE;YACb,CAAC,CAAC,OAAOS,GAAG,EAAE;cACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;YACvB;UACF,CAAC;UACD/D,QAAQ,CAACsF,MAAM,eACXlF,OAAA,CAACE,YAAY;YAACG,KAAK,EAAEgC,OAAQ;YAAC/B,gBAAgB,EAAEA;UAAiB;YAAAc,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAG,EACpE4D,QAAQ,CAACC,cAAc,CAAE,OAAM/C,OAAQ,EAAC,CAAC,CAC5C;QACH,CAAC,MAAM;UACL,MAAMuC,SAAS,GAAG;YAChBS,IAAI,EAAEhC,QAAQ,CAAC,CAAC,CAAC;YACjBpC,KAAK,EAAEtB,MAAM,CAACoF,KAAK,CAACC,UAAU,CAACX,MAAM,CAAClC,MAAM,CAACsC,QAAQ,CAAC,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC;YACnEI,QAAQ,EAAE;UACZ,CAAC;UACD,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACO,IAAI,CAACjB,QAAQ,CAAC,CAAC,CAAC,EAAEhB,OAAO,EAAEuC,SAAS,CAAC;UACxE,MAAME,WAAW,CAACG,IAAI,EAAE;UACxBhC,SAAS,EAAE;QACb;MACF,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EACA,eAAenD,QAAQA,CAACH,KAAK,EAAEE,KAAK,EAAE;IACpC,IAAI,OAAO4C,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAAEC,MAAM,EAAE;QAAsB,CAAC,CAAC;QACjF,MAAMK,QAAQ,GAAG,IAAIjE,MAAM,CAACkE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMmB,MAAM,GAAGX,QAAQ,CAACY,SAAS,EAAE;QACnC,MAAMT,QAAQ,GAAG,IAAIpE,MAAM,CAACqE,QAAQ,CAAC/D,kBAAkB,EAAEJ,YAAY,CAACoE,GAAG,EAAEM,MAAM,CAAC;QAClF,MAAMK,SAAS,GAAG;UAChBS,IAAI,EAAEhC,QAAQ,CAAC,CAAC,CAAC;UACjBwB,QAAQ,EAAE;QACZ,CAAC;QACD,MAAMC,WAAW,GAAG,MAAMf,QAAQ,CAACvD,QAAQ,CAACH,KAAK,EAAEV,MAAM,CAACoF,KAAK,CAACC,UAAU,CAACX,MAAM,CAAC9D,KAAK,CAAC,CAAC,EAAEqE,SAAS,CAAC;QACrG,MAAME,WAAW,CAACG,IAAI,EAAE;QACxBhC,SAAS,EAAE;MACb,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EAEA,eAAe2B,QAAQA,CAAA,EAAG;IACxB,IAAI,OAAOnC,MAAM,CAACC,QAAQ,KAAK,WAAW,EAAE;MAC1C,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMF,MAAM,CAACC,QAAQ,CAACE,OAAO,CAAC;UAACC,MAAM,EAAE;QAAqB,CAAC,CAAC;QAC/E,MAAMK,QAAQ,GAAG,IAAIjE,MAAM,CAACkE,SAAS,CAACC,YAAY,CAACX,MAAM,CAACC,QAAQ,CAAC;QACnE,MAAMmB,MAAM,GAAGX,QAAQ,CAACY,SAAS,EAAE;QACnC,MAAMT,QAAQ,GAAG,IAAIpE,MAAM,CAACqE,QAAQ,CAAC/D,kBAAkB,EAAEJ,YAAY,CAACoE,GAAG,EAAEM,MAAM,CAAC;QAClF,MAAMO,WAAW,GAAG,MAAMf,QAAQ,CAACuB,QAAQ,EAAE;QAC7C,MAAMR,WAAW,CAACG,IAAI,EAAE;QACxBhC,SAAS,EAAE;MACb,CAAC,CAAC,OAAOS,GAAG,EAAE;QACZhB,QAAQ,CAACgB,GAAG,CAACC,OAAO,CAAC;MACvB;IACF;EACF;EAEA,oBAEI3D,OAAA;IAAK6B,SAAS,EAAC,KAAK;IAAAhB,QAAA,GACjBgC,OAAO,CAAC,CAAC,CAAC,KAAK,4CAA4C,iBACxD7C,OAAA;MAAQ6B,SAAS,EAAC,UAAU;MAACO,OAAO,EAAEkD,QAAS;MAAAzE,QAAA,EAAC;IAEhD;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACH,eACDvB,OAAA;MAAK6B,SAAS,EAAC,WAAW;MAAAhB,QAAA,gBACxBb,OAAA;QAAK6B,SAAS,EAAC,aAAa;QAAAhB,QAAA,EACzBkC,OAAO,CAACwC,GAAG,CAAE5D,GAAG,iBACb3B,OAAA,CAACyB,OAAO;UAAmBE,GAAG,EAAEA,GAAI;UAACC,YAAY,EAAE0C,IAAK;UAAChE,gBAAgB,EAAEE;QAAS,GAAtEmB,GAAG,CAACU,OAAO;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAC5B;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACE,EACLkB,KAAK,iBAAIzC,OAAA;QAAAa,QAAA,EAAI4B;MAAK;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACxBvB,OAAA;QAAAa,QAAA,EAAI;MAAc;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK,eACvBvB,OAAA;QAAG6B,SAAS,EAAC,OAAO;QAAAhB,QAAA,GACjB8B,IAAI,CAACwB,WAAW,EAAC,GAAC,EAACxB,IAAI,CAAC6C,SAAS;MAAA;QAAApE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAChC,eACJvB,OAAA;QAAG6B,SAAS,EAAC,MAAM;QAAAhB,QAAA,GAAC,0BACM,EAACsB,MAAM,CAACQ,IAAI,CAACuB,IAAI,CAAC,GAAG,EAAE,IAAI,EAAE,EAAC,2BACxD;MAAA;QAAA9C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAI;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACA;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEZ;AAACiB,GAAA,CAhJQD,GAAG;AAAAkD,GAAA,GAAHlD,GAAG;AAiJZ,eAAeA,GAAG;AAAC,IAAAf,EAAA,EAAAc,GAAA,EAAAmD,GAAA;AAAAC,YAAA,CAAAlE,EAAA;AAAAkE,YAAA,CAAApD,GAAA;AAAAoD,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}