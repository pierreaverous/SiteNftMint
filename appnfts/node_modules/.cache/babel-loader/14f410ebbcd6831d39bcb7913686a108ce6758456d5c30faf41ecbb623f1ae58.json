{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\pierr\\\\Documents\\\\Nfts\\\\appnfts\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartcontratAdress = '0x25E1e87d8755538c4185AF53d1741059F91B81c8';\nfunction NFTCard(_ref) {\n  _s();\n  let {\n    nft,\n    mintFunction,\n    setPriceFunction\n  } = _ref;\n  const [newPrice, setNewPrice] = useState(0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"nft-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"nftImage\",\n      src: nft.image.replace('ipfs://', 'https://ipfs.io/ipfs/'),\n      alt: nft.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => mintFunction(nft.edition),\n      children: [\"Mint NFT \", nft.edition]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: `price_${nft.edition}`,\n        children: \"Price (in ETH): \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: `price_${nft.edition}`,\n        type: \"number\",\n        value: newPrice,\n        onChange: e => setNewPrice(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setPriceFunction(nft.edition, ethers.utils.parseEther(String(Number(newPrice)))),\n        children: \"Set Price\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 7\n  }, this);\n}\n_s(NFTCard, \"XYHp23TbYq4jarXYA24zzrxMxrY=\");\n_c = NFTCard;\nfunction App() {\n  _s2();\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {\n          cost: String(cost),\n          totalSupply: String(totalSupply)\n        };\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 2900000\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000\n        };\n        const transaction = await contract.setNftPrice(nftId, price, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({\n          method: 'eth_requestAccounts'\n        });\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"withdraw\",\n      onClick: withdraw,\n      children: \"Withdraw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"nft-gallery\",\n        children: nftData.map(nft => /*#__PURE__*/_jsxDEV(NFTCard, {\n          nft: nft,\n          mintFunction: mint\n        }, nft.edition, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Mint a Jox NFT\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"count\",\n        children: [data.totalSupply, \"/\", data.maxSupply]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"cost\",\n        children: [\"Jox Collection NFT cost \", Number(data.cost) / 10 ** 18, \" ETH (excluding gas fees)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 7\n  }, this);\n}\n_s2(App, \"2BGA2Z5gzNji+rNAX3sMIQu9KMI=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"NFTCard\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useEffect","useState","ethers","SmartContrat","dataNft","jsxDEV","_jsxDEV","smartcontratAdress","NFTCard","_ref","_s","nft","mintFunction","setPriceFunction","newPrice","setNewPrice","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","src","image","replace","alt","onClick","edition","htmlFor","id","type","value","onChange","e","target","utils","parseEther","String","Number","_c","App","_s2","error","setError","data","setData","account","setAccount","nftData","setNftData","fetchData","getAccounts","window","ethereum","accounts","request","method","console","log","err","message","provider","providers","Web3Provider","contract","Contract","abi","cost","totalSupply","object","mint","signer","getSigner","overrides","from","gasLimit","transaction","wait","setNftPrice","nftId","price","withdraw","map","maxSupply","_c2","$RefreshReg$"],"sources":["C:/Users/pierr/Documents/Nfts/appnfts/src/App.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartContrat from './artifacts/contracts/SmartContrat.sol/SmartContrat.json';\nimport './App.css';\nimport dataNft from './_metadata.json';\n\nconst smartcontratAdress = '0x25E1e87d8755538c4185AF53d1741059F91B81c8';\n\nfunction NFTCard({ nft, mintFunction, setPriceFunction }) {\n  const [newPrice, setNewPrice] = useState(0);\n  return (\n      <div className=\"nft-card\">\n        <h2>{nft.name}</h2>\n        <img  className='nftImage' src={nft.image.replace('ipfs://', 'https://ipfs.io/ipfs/')} alt={nft.name} />\n        <button onClick={() => mintFunction(nft.edition)}>Mint NFT {nft.edition}</button>\n        <div>\n          <label htmlFor={`price_${nft.edition}`}>Price (in ETH): </label>\n          <input id={`price_${nft.edition}`} type=\"number\" value={newPrice} onChange={(e) => setNewPrice(e.target.value)} />\n          <button onClick={() => setPriceFunction(nft.edition, ethers.utils.parseEther(String(Number(newPrice))))}>Set Price</button>\n        </div>\n      </div>\n  );\n}\n\nfunction App() {\n  const [error, setError] = useState('');\n  const [data, setData] = useState({});\n  const [account, setAccount] = useState([]);\n  const [nftData, setNftData] = useState([]);\n\n  useEffect(() => {\n    fetchData();\n    getAccounts();\n    setNftData(dataNft);\n  }, []);\n\n  async function getAccounts() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        setAccount(accounts);\n        console.log(accounts[0]);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function fetchData() {\n    if (typeof window.ethereum !== 'undefined') {\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, provider);\n      try {\n        const cost = await contract.cost();\n        const totalSupply = await contract.totalSupply();\n        const object = {cost: String(cost), totalSupply: String(totalSupply)};\n        setData(object);\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function mint(edition) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          value: ethers.utils.parseEther(String(Number(data.cost) / 10 ** 18)),\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.mint(accounts[0], edition, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n  async function setNftPrice(nftId, price) {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const overrides = {\n          from: accounts[0],\n          gasLimit: 2900000,\n        };\n        const transaction = await contract.setNftPrice(nftId, price, overrides);\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n  async function withdraw() {\n    if (typeof window.ethereum !== 'undefined') {\n      try {\n        const accounts = await window.ethereum.request({method: 'eth_requestAccounts'});\n        const provider = new ethers.providers.Web3Provider(window.ethereum);\n        const signer = provider.getSigner();\n        const contract = new ethers.Contract(smartcontratAdress, SmartContrat.abi, signer);\n        const transaction = await contract.withdraw();\n        await transaction.wait();\n        fetchData();\n      } catch (err) {\n        setError(err.message);\n      }\n    }\n  }\n\n\n  return (\n      <div className=\"App\">\n        {account[0] === \"0x0ca22262c953bf13f89be2e1ff1742f9d227b18c\" && (\n            <button className=\"withdraw\" onClick={withdraw}>\n              Withdraw\n            </button>\n        )}\n        <div className=\"container\">\n          <div className=\"nft-gallery\">\n            {nftData.map((nft) => (\n                <NFTCard key={nft.edition} nft={nft} mintFunction={mint}/>\n            ))}\n          </div>\n          {error && <p>{error}</p>}\n          <h1>Mint a Jox NFT</h1>\n          <p className=\"count\">\n            {data.totalSupply}/{data.maxSupply}\n          </p>\n          <p className=\"cost\">\n            Jox Collection NFT cost {Number(data.cost) / 10 ** 18} ETH (excluding gas fees)\n          </p>\n        </div>\n      </div>\n  );\n}\n  export default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}